pipeline {
    agent any
    environment {
        DOCKER_IMAGE = "secure-pro"
        ENV_FILE = ".env.prod"
        PROFILE = 'prod'
        DB_URL = 'jdbc:oracle:thin:@localhost:1521:securepro'
        DB_USERNAME = credentials('db-username') // Jenkins credentials for prod
        DB_PASSWORD = credentials('db-password') // Jenkins credentials for prod
    }
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/MesVortex/SecurePro.git'
            }
        }
        stage('Build') {
            steps {
                sh """
                ./mvnw clean package \
                    -Dspring.profiles.active=$PROFILE \
                    -Dspring.datasource.url=$DB_URL \
                    -Dspring.datasource.username=$DB_USERNAME \
                    -Dspring.datasource.password=$DB_PASSWORD
                """
            }
        }
        stage('Docker Build and Push') {
            steps {
                script {

                    def dockerImage = docker.build("${DOCKER_IMAGE}:${env.BUILD_NUMBER}")

                    dockerImage.push("${env.BUILD_NUMBER}")
                    dockerImage.push("latest")
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    sh 'docker-compose down'

                    sh """
                    docker-compose --env-file ${ENV_FILE} up -d --build
                    """
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline completed.'
        }
        success {
            echo 'Pipeline succeeded.'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}